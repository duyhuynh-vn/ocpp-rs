version: '3.8'

services:
  # PostgreSQL database
  postgres:
    image: postgres:16-alpine
    container_name: ocpp-postgres
    environment:
      POSTGRES_DB: ocpp_dev
      POSTGRES_USER: ocpp_user
      POSTGRES_PASSWORD: ocpp_password
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ocpp_user -d ocpp_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ocpp-network

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: ocpp-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - ocpp-network

  # OCPP CSMS (Central System Management System)
  csms:
    build:
      context: .
      target: csms
    container_name: ocpp-csms
    ports:
      - "8080:8080"  # WebSocket port
      - "9090:9090"  # Metrics/Health port
      - "3000:3000"  # HTTP API port
    environment:
      - RUST_LOG=info,ocpp=debug
      - RUST_BACKTRACE=1
      - DATABASE_URL=postgres://ocpp_user:ocpp_password@postgres:5432/ocpp_dev
      - REDIS_URL=redis://redis:6379
      - OCPP_BIND_ADDRESS=0.0.0.0:8080
      - OCPP_HTTP_API_ADDRESS=0.0.0.0:3000
      - OCPP_METRICS_ADDRESS=0.0.0.0:9090
      - OCPP_MAX_CONNECTIONS=1000
      - OCPP_HEARTBEAT_INTERVAL=60
      - OCPP_MESSAGE_TIMEOUT=30
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "ocpp-cli", "health-check"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - ./config:/app/config:ro
      - csms_logs:/app/logs
    networks:
      - ocpp-network
    restart: unless-stopped

  # OCPP Charge Point Simulator
  cp-simulator:
    build:
      context: .
      target: cp-simulator
    container_name: ocpp-cp-simulator
    environment:
      - RUST_LOG=info,ocpp=debug
      - RUST_BACKTRACE=1
      - OCPP_CSMS_URL=ws://csms:8080/ocpp/CP001
      - OCPP_CHARGE_POINT_ID=CP001
      - OCPP_HEARTBEAT_INTERVAL=60
      - OCPP_RECONNECT_INTERVAL=10
      - OCPP_MAX_RECONNECT_ATTEMPTS=10
      - OCPP_SIMULATION_SPEED=1.0
      - OCPP_AUTO_START_TRANSACTION=true
    depends_on:
      csms:
        condition: service_healthy
    volumes:
      - ./config:/app/config:ro
      - cp_logs:/app/logs
    networks:
      - ocpp-network
    restart: unless-stopped
    profiles:
      - simulator

  # Multiple charge point simulators for load testing
  cp-simulator-multi:
    build:
      context: .
      target: cp-simulator
    environment:
      - RUST_LOG=info
      - RUST_BACKTRACE=1
      - OCPP_CSMS_URL=ws://csms:8080/ocpp
      - OCPP_CHARGE_POINT_COUNT=10
      - OCPP_HEARTBEAT_INTERVAL=60
      - OCPP_RECONNECT_INTERVAL=10
      - OCPP_SIMULATION_SPEED=10.0
    depends_on:
      csms:
        condition: service_healthy
    volumes:
      - ./config:/app/config:ro
    networks:
      - ocpp-network
    deploy:
      replicas: 3
    profiles:
      - load-test

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:v2.47.0
    container_name: ocpp-prometheus
    ports:
      - "9091:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - ocpp-network
    profiles:
      - monitoring

  # Grafana for metrics visualization
  grafana:
    image: grafana/grafana:10.1.0
    container_name: ocpp-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./config/grafana/dashboards:/var/lib/grafana/dashboards:ro
    depends_on:
      - prometheus
    networks:
      - ocpp-network
    profiles:
      - monitoring

  # Jaeger for distributed tracing
  jaeger:
    image: jaegertracing/all-in-one:1.49
    container_name: ocpp-jaeger
    ports:
      - "16686:16686"  # Jaeger UI
      - "14268:14268"  # Jaeger collector HTTP
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - ocpp-network
    profiles:
      - tracing

  # OCPP Conformance Test Suite
  conformance:
    build:
      context: .
      target: conformance
    container_name: ocpp-conformance
    environment:
      - RUST_LOG=info,ocpp=debug
      - RUST_BACKTRACE=1
      - OCPP_CSMS_URL=ws://csms:8080/ocpp
      - OCPP_TEST_SUITE_CONFIG=/app/config/conformance.toml
      - OCPP_REPORT_OUTPUT_DIR=/app/reports
    depends_on:
      csms:
        condition: service_healthy
    volumes:
      - ./config:/app/config:ro
      - conformance_reports:/app/reports
    networks:
      - ocpp-network
    profiles:
      - conformance

  # pgAdmin for database management (development only)
  pgadmin:
    image: dpage/pgadmin4:7.7
    container_name: ocpp-pgadmin
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@ocpp.dev
      - PGADMIN_DEFAULT_PASSWORD=admin
      - PGADMIN_CONFIG_SERVER_MODE=False
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./config/pgadmin/servers.json:/pgadmin4/servers.json:ro
    depends_on:
      - postgres
    networks:
      - ocpp-network
    profiles:
      - dev-tools

  # Nginx reverse proxy for development
  nginx:
    image: nginx:1.25-alpine
    container_name: ocpp-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./config/nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - csms
    networks:
      - ocpp-network
    profiles:
      - proxy

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  csms_logs:
    driver: local
  cp_logs:
    driver: local
  conformance_reports:
    driver: local
  pgadmin_data:
    driver: local

networks:
  ocpp-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
